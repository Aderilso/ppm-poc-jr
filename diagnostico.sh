#!/bin/bash

echo "üîß DIAGN√ìSTICO DO SISTEMA PPM"
echo "================================"

# Verificar Node.js
echo "1. üì¶ Verificando Node.js..."
if command -v node &> /dev/null; then
    echo "   ‚úÖ Node.js encontrado: $(node --version)"
else
    echo "   ‚ùå Node.js n√£o encontrado!"
    exit 1
fi

# Verificar portas
echo ""
echo "2. üîå Verificando portas..."
echo "   Porta 3001 (Backend):"
if lsof -i :3001 &> /dev/null; then
    echo "   ‚úÖ Porta 3001 em uso"
    lsof -i :3001 | head -2
else
    echo "   ‚ùå Porta 3001 livre (backend n√£o est√° rodando)"
fi

echo "   Porta 8080 (Frontend):"
if lsof -i :8080 &> /dev/null; then
    echo "   ‚úÖ Porta 8080 em uso"
    lsof -i :8080 | head -2
else
    echo "   ‚ùå Porta 8080 livre (frontend n√£o est√° rodando)"
fi

# Verificar depend√™ncias
echo ""
echo "3. üìö Verificando depend√™ncias..."
if [ -d "node_modules" ]; then
    echo "   ‚úÖ Frontend: node_modules encontrado"
else
    echo "   ‚ùå Frontend: node_modules n√£o encontrado"
fi

if [ -d "server/node_modules" ]; then
    echo "   ‚úÖ Backend: node_modules encontrado"
else
    echo "   ‚ùå Backend: node_modules n√£o encontrado"
fi

# Testar API
echo ""
echo "4. üåê Testando API..."
if curl -s http://localhost:3001/api/health &> /dev/null; then
    echo "   ‚úÖ API responde em http://localhost:3001/api/health"
    echo "   üìÑ Resposta: $(curl -s http://localhost:3001/api/health)"
else
    echo "   ‚ùå API n√£o responde em http://localhost:3001/api/health"
fi

# Verificar banco de dados
echo ""
echo "5. üóÑÔ∏è Verificando banco de dados..."
if [ -f "server/prisma/dev.db" ]; then
    echo "   ‚úÖ Banco de dados encontrado"
    echo "   üìä Tamanho: $(du -h server/prisma/dev.db | cut -f1)"
else
    echo "   ‚ùå Banco de dados n√£o encontrado"
fi

# Verificar arquivos importantes
echo ""
echo "6. üìÅ Verificando arquivos importantes..."
if [ -f "setup-database.sh" ]; then
    echo "   ‚úÖ setup-database.sh encontrado"
else
    echo "   ‚ùå setup-database.sh n√£o encontrado"
fi

if [ -f "server/index.js" ]; then
    echo "   ‚úÖ server/index.js encontrado"
else
    echo "   ‚ùå server/index.js n√£o encontrado"
fi

if [ -f "package.json" ]; then
    echo "   ‚úÖ package.json encontrado"
else
    echo "   ‚ùå package.json n√£o encontrado"
fi

# Resumo
echo ""
echo "================================"
echo "üìã RESUMO DO DIAGN√ìSTICO"
echo "================================"

if lsof -i :3001 &> /dev/null && lsof -i :8080 &> /dev/null; then
    echo "‚úÖ SISTEMA FUNCIONANDO"
    echo "   - Backend: http://localhost:3001"
    echo "   - Frontend: http://localhost:8080"
    echo "   - Prisma Studio: http://localhost:5555"
elif lsof -i :3001 &> /dev/null; then
    echo "‚ö†Ô∏è BACKEND RODANDO, FRONTEND PARADO"
    echo "   Execute: npm run dev"
elif lsof -i :8080 &> /dev/null; then
    echo "‚ö†Ô∏è FRONTEND RODANDO, BACKEND PARADO"
    echo "   Execute: cd server && npm run dev"
else
    echo "‚ùå SISTEMA PARADO"
    echo "   Execute: ./setup-database.sh"
    echo "   Depois: cd server && npm run dev"
    echo "   E em outro terminal: npm run dev"
fi

echo ""
echo "üîß Para mais detalhes, consulte: TROUBLESHOOTING.md"
