@echo off
chcp 65001 >nul
echo üîç DIAGN√ìSTICO ESPEC√çFICO DO DASHBOARD
echo ========================================
echo.

REM Verificar se o backend est√° rodando
echo 1. üîå Verificando backend...
netstat -an | findstr :3001 >nul
if %errorlevel% equ 0 (
    echo    ‚úÖ Backend rodando na porta 3001
) else (
    echo    ‚ùå Backend N√ÉO est√° rodando na porta 3001
    echo    üîß SOLU√á√ÉO: Execute 'cd server ^&^& npm run dev'
    pause
    exit /b 1
)

REM Verificar se o frontend est√° rodando
echo.
echo 2. üåê Verificando frontend...
netstat -an | findstr :8080 >nul
if %errorlevel% equ 0 (
    echo    ‚úÖ Frontend rodando na porta 8080
) else (
    echo    ‚ùå Frontend N√ÉO est√° rodando na porta 8080
    echo    üîß SOLU√á√ÉO: Execute 'npm run dev'
    pause
    exit /b 1
)

REM Testar API de entrevistas
echo.
echo 3. üìä Testando API de entrevistas...
powershell -Command "try { $response = Invoke-WebRequest -Uri 'http://localhost:3001/api/interviews' -UseBasicParsing; Write-Host '   ‚úÖ API responde corretamente (HTTP' $response.StatusCode ')'; $content = $response.Content; $interviews = $content | ConvertFrom-Json; Write-Host '   üìà Total de entrevistas:' $interviews.Count; if ($interviews.Count -gt 0) { Write-Host '   ‚úÖ H√° dados para exibir no Dashboard'; $first = $interviews[0]; Write-Host '   üìã F1 Answers:' ($first.f1Answers -ne $null); Write-Host '   üìã F2 Answers:' ($first.f2Answers -ne $null); Write-Host '   üìã F3 Answers:' ($first.f3Answers -ne $null); Write-Host '   ‚úÖ Completed:' $first.isCompleted } else { Write-Host '   ‚ö†Ô∏è Nenhuma entrevista encontrada'; Write-Host '   üí° Crie algumas entrevistas primeiro' } } catch { Write-Host '   ‚ùå API n√£o responde corretamente'; Write-Host '   üîß SOLU√á√ÉO: Verifique se o backend est√° configurado' }"

REM Testar API de health
echo.
echo 4. üè• Testando health check...
powershell -Command "try { $health = Invoke-WebRequest -Uri 'http://localhost:3001/api/health' -UseBasicParsing; Write-Host '   ‚úÖ Health check OK:' $health.Content } catch { Write-Host '   ‚ùå Health check falhou' }"

REM Verificar banco de dados
echo.
echo 5. üóÑÔ∏è Verificando banco de dados...
if exist "server\prisma\dev.db" (
    echo    ‚úÖ Banco de dados encontrado
    for %%A in ("server\prisma\dev.db") do echo    üìä Tamanho: %%~zA bytes
) else (
    echo    ‚ùå Banco de dados n√£o encontrado
    echo    üîß SOLU√á√ÉO: Execute 'setup-database.bat'
)

REM Verificar logs do backend
echo.
echo 6. üìù Verificando logs do backend...
if exist "backend.log" (
    echo    ‚úÖ Log do backend encontrado
    echo    üìã √öltimas linhas do log:
    powershell -Command "Get-Content backend.log -Tail 5" 2>nul || echo    ‚ö†Ô∏è N√£o foi poss√≠vel ler o log
) else (
    echo    ‚ö†Ô∏è Log do backend n√£o encontrado
)

REM Verificar console do navegador
echo.
echo 7. üåê Verificando console do navegador...
echo    üìã Abra o navegador em: http://localhost:8080/dashboard
echo    üìã Pressione F12 para abrir o console
echo    üìã Verifique se h√° erros em vermelho

REM Testar acesso direto ao Dashboard
echo.
echo 8. üéØ Testando acesso ao Dashboard...
powershell -Command "try { $dashboard = Invoke-WebRequest -Uri 'http://localhost:8080/dashboard' -UseBasicParsing; Write-Host '   ‚úÖ Dashboard acess√≠vel via HTTP' } catch { Write-Host '   ‚ö†Ô∏è Dashboard pode ter problemas' }"

echo.
echo ========================================
echo üìã RESUMO DO DIAGN√ìSTICO
echo ========================================

REM Verificar status geral
netstat -an | findstr :3001 >nul
set backend_ok=%errorlevel%

netstat -an | findstr :8080 >nul
set frontend_ok=%errorlevel%

if %backend_ok% equ 0 if %frontend_ok% equ 0 (
    echo ‚úÖ SISTEMA FUNCIONANDO CORRETAMENTE
    echo    - Backend: OK
    echo    - Frontend: OK
    echo    - API: OK
    echo.
    echo üîß SE O DASHBOARD AINDA N√ÉO FUNCIONA:
    echo    1. Limpe o cache do navegador (Ctrl+F5)
    echo    2. Verifique o console do navegador (F12)
    echo    3. Tente acessar: http://localhost:8080/dashboard
    echo    4. Execute: diagnostico-dashboard.bat novamente
) else (
    echo ‚ùå SISTEMA N√ÉO FUNCIONANDO
    if %backend_ok% neq 0 echo    - Backend: FALHOU
    if %frontend_ok% neq 0 echo    - Frontend: FALHOU
    echo.
    echo üîß SOLU√á√ÉO:
    echo    1. Execute: setup-completo.bat
    echo    2. Ou reinicie manualmente:
    echo       - Backend: cd server ^&^& npm run dev
    echo       - Frontend: npm run dev
)

echo.
echo üìû Para mais ajuda, consulte: TROUBLESHOOTING.md
pause
